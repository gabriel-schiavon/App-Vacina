const sqlite3 = require('sqlite3').verbose();
const path = require('path');

const db = new sqlite3.Database(path.resolve(__dirname, '../vaxiagenda.sqlite'));

db.serialize(() => {
  // CriaÃ§Ã£o das tabelas
  db.run(`CREATE TABLE IF NOT EXISTS usuarios (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    nome TEXT,
    cpf TEXT UNIQUE,
    dataNasc TEXT,
    telefone TEXT,
    endereco TEXT,
    email TEXT,
    senha TEXT,
    responsavelCpf TEXT
  )`);

  db.run(`CREATE TABLE IF NOT EXISTS vacinas (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    nomeVacina TEXT,
    intervalo INTEGER,
    descricao TEXT
  )`);

  // PrÃ©-cadastro das vacinas
  db.get('SELECT COUNT(*) AS total FROM vacinas', (err, row) => {
    if (row.total === 0) {
      const vacinas = [ 
        ["Hepatite B", 0, "Vacina para recÃ©m-nascidos"],
        ["BCG", 0, "Vacina para recÃ©m-nascidos"],
        ["Pentavalente (1Âª dose)", 0, "Vacina a ser tomada no 2Âº mÃªs de vida"],
        ["Pentavalente (2Âª dose)", 0, "Vacina a ser tomada no 4Âº mÃªs de vida"],
        ["VIP/VOP (1Âª dose)", 0, "Vacina a ser tomada no 2Âº mÃªs de vida"],
        ["VIP/VOP (2Âª dose)", 0, "Vacina a ser tomada no 4Âº mÃªs de vida"],
        ["VIP/VOP (3Âª dose)", 0, "Vacina a ser tomada no 6Âº mÃªs de vida"],
        ["RotavÃ­rus humano (1Âª dose)", 0, "Vacina a ser tomada no 2Âº mÃªs de vida * G1P1 [8] (atenuada) - (VRH) *"],
        ["RotavÃ­rus humano (2Âª dose)", 0, "Vacina a ser tomada no 4Âº mÃªs de vida * G1P1 [8] (atenuada) - (VRH) *"],
        ["PneumocÃ³cica 10-valente (1Âª dose)", 0, "Vacina a ser tomada no 2Âº mÃªs de vida"],
        ["PneumocÃ³cica 10-valente (2Âª dose)", 0, "Vacina a ser tomada no 4Âº mÃªs de vida"],
        ["PneumocÃ³cica 10-valente (ReforÃ§o)", 0, "Vacina a ser tomada com 1 ano de vida"],
        ["MeningocÃ³cica C conjugada(1Âª dose)", 0, "Vacina a ser tomada no 3Âº mÃªs de vida"],
        ["MeningocÃ³cica C conjugada(2Âª dose)", 0, "Vacina a ser tomada no 5Âº mÃªs de vida"],
        ["Febre Amarela(1Âª dose)", 0, "Vacina a ser tomada no 9Âº mÃªs e 4Âº e 5Âº ano de vida"],
        ["Pentavalente (3Âª dose)", 0, "Vacina a ser tomada no 6Âº mÃªs de vida"],
        ["MeningocÃ³cica C conjugada(ReforÃ§o)", 0, "cina a ser tomada no 12Âº mÃªs de vida"],
        ["TrÃ­plice Viral", 0, "Vacina a ser tomada no 12Âº mÃªs de vida"],
        ["DTP (1Âº ReforÃ§o)", 0, "Vacina a ser tomada no 15Âº mÃªs de vida"],
        ["Poliomielite 1 e 3 - VOPb (1Âº ReforÃ§o)", 0, "Vacina a ser tomada no 15Âº mÃªs de vida"],
        ["Hepatite A (1Âª dose)", 0, "Vacina a ser tomada no 15Âº mÃªs de vida"],
        ["Tetra viral (1Âª dose)", 0, "Vacina a ser tomada no 15Âº mÃªs de vida"],
        ["DTP (2Âº ReforÃ§o)", 0, "Vacina a ser tomada com 4 anos de vida"],
        ["Febre Amarela (ReforÃ§o)", 0, "Vacina a ser tomada com 4 anos de vida"],
        ["Poliomielite 1 e 3 - VOPb (2Âº ReforÃ§o)", 0, "Vacina a ser tomada com 4 anos de vida"],
        ["Varicela (1Âª dose)", 0, "Vacina a ser tomada com 4 anos de vida"],
        ["PneumocÃ³cica 23-valente", 0, "Vacina a ser tomada com 5 anos de vida"],
        ["HPV infantil", 0, "Vacina a ser tomada entre 9 a 10 anos de vida"],
        ["HPV adolescente", 0, "Vacina a ser tomada entre 11 a 14 anos de vida"],
        ["MeningocÃ³cica ACWY", 0, "Vacina a ser tomada entre 11 a 14 anos de vida"],
        ["TÃ©tano", 10, "Vacina a ser tomada na fase adulta"],
        ["TrÃ­plice viral (1Âª dose)", 0, "Vacina a ser tomada na fase adulta"],
        ["TrÃ­plice viral (2Âª dose)", 0, "Vacina a ser tomada na fase adulta"],
        ["TrÃ­plice (dose Ãºnica)", 0, "Vacina a ser tomada na fase adulta"],
        ["PneumocÃ³cica 23-valente (adulto)", 0, "Vacina a ser tomada na fase adulta"],
        ["Febre Amarela (adulto)", 0, "Vacina a ser tomada na fase adulta"],
        ["Influenza", 0, "Vacina da gripe"],
        ["Covid", 6, "Vacina da Covid"]
      ];

      const stmt = db.prepare(`INSERT INTO vacinas (nomeVacina, intervalo, descricao) VALUES (?, ?, ?)`);
      for (const vacina of vacinas) {
        stmt.run(vacina);
      }
      stmt.finalize();
      console.log('Vacinas prÃ©-cadastradas com sucesso! ðŸŽ‰');
    }
  });

  db.run(`CREATE TABLE IF NOT EXISTS historico (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    idUsuario INTEGER,
    idVacina INTEGER,
    dataAplicacao TEXT,
    FOREIGN KEY (idUsuario) REFERENCES usuarios(id),
    FOREIGN KEY (idVacina) REFERENCES vacinas(id)
  )`);

  db.run(`CREATE TABLE IF NOT EXISTS locais (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    cnpj TEXT NOT NULL,
    nome TEXT NOT NULL,
    endereco TEXT NOT NULL,
    email TEXT NOT NULL,
    senha TEXT NOT NULL
  )`);

  db.run(`CREATE TABLE IF NOT EXISTS vacinas_locais (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    idLocal INTEGER NOT NULL,
    idVacina INTEGER NOT NULL,
    FOREIGN KEY (idLocal) REFERENCES locais(id),
    FOREIGN KEY (idVacina) REFERENCES vacinas(id)
  )`);

  db.run(`CREATE TABLE IF NOT EXISTS agendamentos (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    idUsuario INTEGER NOT NULL,
    idVacina INTEGER NOT NULL,
    idLocal INTEGER NOT NULL,
    data TEXT NOT NULL,
    FOREIGN KEY (idUsuario) REFERENCES usuarios(id),
    FOREIGN KEY (idVacina) REFERENCES vacinas(id),
    FOREIGN KEY (idLocal) REFERENCES locais(id)
  )`);



});

module.exports = db;
